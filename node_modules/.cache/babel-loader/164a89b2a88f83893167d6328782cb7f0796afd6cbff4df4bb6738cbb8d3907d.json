{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\food-ordering\\\\src\\\\context\\\\MenuState.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport menuContext from \"./menuContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MenuState = props => {\n  _s();\n  const host = \"http://localhost:5000\";\n  const menuDataInitial = [];\n  const [menuData, setMenuData] = useState(menuDataInitial);\n  const {\n    dispatch\n  } = useContext(menuContext); // Replace YourContext with your actual context\n\n  const getMenu = async () => {\n    // API CALL\n    const response = await fetch(`${host}/api/menuData/fetchmenudata`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const json = await response.json();\n    setMenuData(json);\n  };\n\n  // Add a menu      \n  const addMenu = async (name, category, price, description, file) => {\n    const response = await fetch(`${host}/api/menuData/addmenu`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        name,\n        category,\n        price,\n        description,\n        file\n      })\n    });\n    const menu = await response.json();\n    dispatch({\n      type: 'ADD_MENU_ITEM',\n      payload: menu\n    });\n\n    // Assuming you have a state variable menuData and categories\n    // Update the state to add the new menu item to the correct category\n    setMenuData(prevMenuData => {\n      const updatedMenu = [...prevMenuData];\n      const categoryIndex = updatedMenu.findIndex(item => item.category === category);\n      if (categoryIndex !== -1) {\n        // Check if the category has an 'items' property; if not, initialize it as an empty array\n        if (!updatedMenu[categoryIndex].hasOwnProperty('items')) {\n          updatedMenu[categoryIndex].items = [];\n        }\n        updatedMenu[categoryIndex].items.push(menu);\n      }\n      return updatedMenu;\n    });\n  };\n\n  // Delete a note\n  const deletemenu = async id => {\n    // API Call\n    const response = await fetch(`${host}/api/menuData/deletemenu/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem('token')\n      }\n    });\n    const json = response.json(); // parses JSON response into native JavaScript objects\n    console.log(json);\n    console.log(\"Deleting the menu with id\" + id);\n    const newMenuData = menuData.filter(menu => menu._id !== id); // Assuming _id is the unique identifier\n    setMenuData(newMenuData);\n  };\n\n  // Edit a note\n  const editMenu = async (id, name, category, price, description, file) => {\n    // API Call\n    const response = await fetch(`${host}/api/menuData/updatemenu/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        name,\n        category,\n        price,\n        description,\n        file\n      }) // body data type must match \"Content-Type\" header\n    });\n\n    const json = await response.json(); // parses JSON response into native JavaScript objects\n    console.log(json);\n    let newMenuData = JSON.parse(JSON.stringify(menuData));\n    // Logic to edit in client\n    for (let index = 0; index < newMenuData.length; index++) {\n      const element = newMenuData[index];\n      if (element._id === id) {\n        newMenuData[index].name = name;\n        newMenuData[index].category = category;\n        newMenuData[index].price = price;\n        newMenuData[index].description = description;\n        newMenuData[index].file = file;\n        break;\n      }\n    }\n    setMenuData(newMenuData);\n  };\n  return /*#__PURE__*/_jsxDEV(menuContext.Provider, {\n    value: {\n      menuData,\n      addMenu,\n      getMenu,\n      editMenu,\n      deletemenu\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n};\n_s(MenuState, \"jmueQ0Zj+XHPXXV6AGoQ2j4Fr7o=\");\n_c = MenuState;\nexport default MenuState;\nvar _c;\n$RefreshReg$(_c, \"MenuState\");","map":{"version":3,"names":["React","useState","menuContext","jsxDEV","_jsxDEV","MenuState","props","_s","host","menuDataInitial","menuData","setMenuData","dispatch","useContext","getMenu","response","fetch","method","headers","json","addMenu","name","category","price","description","file","localStorage","getItem","body","JSON","stringify","menu","type","payload","prevMenuData","updatedMenu","categoryIndex","findIndex","item","hasOwnProperty","items","push","deletemenu","id","console","log","newMenuData","filter","_id","editMenu","parse","index","length","element","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/React/food-ordering/src/context/MenuState.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport menuContext from \"./menuContext\";\r\n\r\nconst MenuState = (props) => {\r\n    const host = \"http://localhost:5000\";\r\n    const menuDataInitial = [];\r\n    const [menuData, setMenuData] = useState(menuDataInitial);\r\n    const { dispatch } = useContext(menuContext); // Replace YourContext with your actual context\r\n\r\n\r\n    const getMenu = async () => {\r\n\r\n        // API CALL\r\n        const response = await fetch(`${host}/api/menuData/fetchmenudata`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n\r\n        });\r\n        const json = await response.json()\r\n        setMenuData(json);\r\n    }\r\n\r\n    // Add a menu      \r\n    const addMenu = async (name, category, price, description, file) => {\r\n        const response = await fetch(`${host}/api/menuData/addmenu`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"auth-token\": localStorage.getItem('token')\r\n            },\r\n            body: JSON.stringify({ name, category, price, description, file })\r\n        });\r\n\r\n        const menu = await response.json();\r\n        dispatch({ type: 'ADD_MENU_ITEM', payload: menu });\r\n \r\n        // Assuming you have a state variable menuData and categories\r\n        // Update the state to add the new menu item to the correct category\r\n        setMenuData((prevMenuData) => {\r\n            const updatedMenu = [...prevMenuData];\r\n            const categoryIndex = updatedMenu.findIndex((item) => item.category === category);\r\n\r\n            if (categoryIndex !== -1) {\r\n                // Check if the category has an 'items' property; if not, initialize it as an empty array\r\n                if (!updatedMenu[categoryIndex].hasOwnProperty('items')) {\r\n                    updatedMenu[categoryIndex].items = [];\r\n                }\r\n\r\n                updatedMenu[categoryIndex].items.push(menu);\r\n            }\r\n\r\n            return updatedMenu;\r\n        });\r\n    }\r\n\r\n    // Delete a note\r\n    const deletemenu = async (id) => {\r\n        // API Call\r\n        const response = await fetch(`${host}/api/menuData/deletemenu/${id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"auth-token\": localStorage.getItem('token')\r\n            },\r\n        });\r\n        const json = response.json(); // parses JSON response into native JavaScript objects\r\n        console.log(json)\r\n\r\n        console.log(\"Deleting the menu with id\" + id)\r\n        const newMenuData = menuData.filter((menu) => menu._id !== id); // Assuming _id is the unique identifier\r\n        setMenuData(newMenuData);\r\n    }\r\n\r\n    // Edit a note\r\n    const editMenu = async (id, name, category, price, description, file) => {\r\n        // API Call\r\n        const response = await fetch(`${host}/api/menuData/updatemenu/${id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"auth-token\": localStorage.getItem('token')\r\n            },\r\n\r\n            body: JSON.stringify({ name, category, price, description, file }) // body data type must match \"Content-Type\" header\r\n        });\r\n        const json = await response.json(); // parses JSON response into native JavaScript objects\r\n        console.log(json);\r\n        let newMenuData = JSON.parse(JSON.stringify(menuData))\r\n        // Logic to edit in client\r\n        for (let index = 0; index < newMenuData.length; index++) {\r\n            const element = newMenuData[index];\r\n            if (element._id === id) {\r\n                newMenuData[index].name = name;\r\n                newMenuData[index].category = category;\r\n                newMenuData[index].price = price;\r\n                newMenuData[index].description = description;\r\n                newMenuData[index].file = file;\r\n                break;\r\n            }\r\n        }\r\n        setMenuData(newMenuData);\r\n    }\r\n\r\n    return (\r\n        <menuContext.Provider value={{ menuData, addMenu, getMenu, editMenu, deletemenu }}>\r\n            {props.children}\r\n        </menuContext.Provider>\r\n    )\r\n}\r\n\r\nexport default MenuState;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}