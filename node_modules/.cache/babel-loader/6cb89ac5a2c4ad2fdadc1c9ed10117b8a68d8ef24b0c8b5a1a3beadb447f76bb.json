{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\food-ordering\\\\src\\\\components\\\\Dashboard.js\";\nimport React from 'react';\nimport './styles.css';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport faker from 'faker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n  const options = {\n    plugins: {\n      title: {\n        display: true,\n        text: 'Chart.js Bar Chart - Stacked'\n      }\n    },\n    responsive: true,\n    scales: {\n      x: {\n        stacked: true\n      },\n      y: {\n        stacked: true\n      }\n    }\n  };\n  const labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\n  const data = {\n    labels,\n    datasets: [{\n      label: 'Dataset 1',\n      data: labels.map(() => faker.datatype.number({\n        min: -1000,\n        max: 1000\n      })),\n      backgroundColor: 'rgb(255, 99, 132)'\n    }, {\n      label: 'Dataset 2',\n      data: labels.map(() => faker.datatype.number({\n        min: -1000,\n        max: 1000\n      })),\n      backgroundColor: 'rgb(75, 192, 192)'\n    }, {\n      label: 'Dataset 3',\n      data: labels.map(() => faker.datatype.number({\n        min: -1000,\n        max: 1000\n      })),\n      backgroundColor: 'rgb(53, 162, 235)'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Bar, {\n      options: options,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 6\n    }, this), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","faker","jsxDEV","_jsxDEV","Dashboard","register","options","plugins","title","display","text","responsive","scales","x","stacked","y","labels","data","datasets","label","map","datatype","number","min","max","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/React/food-ordering/src/components/Dashboard.js"],"sourcesContent":["import React from 'react';\r\nimport './styles.css';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport faker from 'faker';\r\n\r\nconst Dashboard = () => {\r\n\r\n  ChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n  );\r\n\r\n  const options = {\r\n  plugins: {\r\n    title: {\r\n      display: true,\r\n      text: 'Chart.js Bar Chart - Stacked',\r\n    },\r\n  },\r\n  responsive: true,\r\n  scales: {\r\n    x: {\r\n      stacked: true,\r\n    },\r\n    y: {\r\n      stacked: true,\r\n    },\r\n  },\r\n};\r\n\r\nconst labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\r\n\r\nconst data = {\r\n  labels,\r\n  datasets: [\r\n    {\r\n      label: 'Dataset 1',\r\n      data: labels.map(() => faker.datatype.number({ min: -1000, max: 1000 })),\r\n      backgroundColor: 'rgb(255, 99, 132)',\r\n    },\r\n    {\r\n      label: 'Dataset 2',\r\n      data: labels.map(() => faker.datatype.number({ min: -1000, max: 1000 })),\r\n      backgroundColor: 'rgb(75, 192, 192)',\r\n    },\r\n    {\r\n      label: 'Dataset 3',\r\n      data: labels.map(() => faker.datatype.number({ min: -1000, max: 1000 })),\r\n      backgroundColor: 'rgb(53, 162, 235)',\r\n    },\r\n  ],\r\n};\r\n\r\n\r\n  return (\r\n    <div>\r\n     <Bar options={options} data={data} />;\r\n    </div>\r\n  );\r\n};\r\n    \r\n\r\nexport default Dashboard;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,cAAc;AACrB,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;AACjB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAEtBV,OAAO,CAACW,QAAQ,CACdV,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MACF,CAAC;EAED,MAAMM,OAAO,GAAG;IAChBC,OAAO,EAAE;MACPC,KAAK,EAAE;QACLC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAE;MACR;IACF,CAAC;IACDC,UAAU,EAAE,IAAI;IAChBC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,OAAO,EAAE;MACX,CAAC;MACDC,CAAC,EAAE;QACDD,OAAO,EAAE;MACX;IACF;EACF,CAAC;EAED,MAAME,MAAM,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC;EAE/E,MAAMC,IAAI,GAAG;IACXD,MAAM;IACNE,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,WAAW;MAClBF,IAAI,EAAED,MAAM,CAACI,GAAG,CAAC,MAAMnB,KAAK,CAACoB,QAAQ,CAACC,MAAM,CAAC;QAAEC,GAAG,EAAE,CAAC,IAAI;QAAEC,GAAG,EAAE;MAAK,CAAC,CAAC,CAAC;MACxEC,eAAe,EAAE;IACnB,CAAC,EACD;MACEN,KAAK,EAAE,WAAW;MAClBF,IAAI,EAAED,MAAM,CAACI,GAAG,CAAC,MAAMnB,KAAK,CAACoB,QAAQ,CAACC,MAAM,CAAC;QAAEC,GAAG,EAAE,CAAC,IAAI;QAAEC,GAAG,EAAE;MAAK,CAAC,CAAC,CAAC;MACxEC,eAAe,EAAE;IACnB,CAAC,EACD;MACEN,KAAK,EAAE,WAAW;MAClBF,IAAI,EAAED,MAAM,CAACI,GAAG,CAAC,MAAMnB,KAAK,CAACoB,QAAQ,CAACC,MAAM,CAAC;QAAEC,GAAG,EAAE,CAAC,IAAI;QAAEC,GAAG,EAAE;MAAK,CAAC,CAAC,CAAC;MACxEC,eAAe,EAAE;IACnB,CAAC;EAEL,CAAC;EAGC,oBACEtB,OAAA;IAAAuB,QAAA,gBACCvB,OAAA,CAACX,GAAG;MAACc,OAAO,EAAEA,OAAQ;MAACW,IAAI,EAAEA;IAAK;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KACtC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEV,CAAC;AAACC,EAAA,GA1DI3B,SAAS;AA6Df,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}