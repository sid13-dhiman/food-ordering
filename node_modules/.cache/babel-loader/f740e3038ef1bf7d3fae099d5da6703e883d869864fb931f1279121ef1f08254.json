{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\food-ordering\\\\src\\\\components\\\\Admin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Admin = () => {\n  _s();\n  const navigate = useNavigate();\n  const handleLogout = () => {\n    // Redirect to the login page\n    navigate('/login');\n  };\n\n  // Example restaurant data\n  const [restaurantData, setRestaurantData] = useState([]);\n\n  // Use useEffect to fetch data when the component mounts\n  useEffect(() => {\n    const fetchRestaurants = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/auth/restaurants', {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"auth-token\": localStorage.getItem('token')\n          }\n        });\n        if (response.ok) {\n          const json = await response.json();\n          setRestaurantData(json);\n        } else {\n          // Handle errors here, e.g., unauthorized access\n          console.error(\"Failed to fetch restaurant data\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching restaurant data:\", error);\n      }\n    };\n    fetchRestaurants();\n  }, []); // Empty dependency array to run the effect only once\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Welcome to the Admin Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: restaurantData.map(restaurant => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: restaurant.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: restaurant.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: restaurant.location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this)]\n        }, restaurant.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Admin, \"zqGQRsbgyVDx2Dq6gapgSAbvPoQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Admin;\nexport default Admin;\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Admin","_s","navigate","handleLogout","restaurantData","setRestaurantData","fetchRestaurants","response","fetch","method","headers","localStorage","getItem","ok","json","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","scope","map","restaurant","id","name","location","type","onClick","_c","$RefreshReg$"],"sources":["D:/React/food-ordering/src/components/Admin.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Admin = () => {\r\n    const navigate = useNavigate();\r\n \r\n    const handleLogout = () => {\r\n        // Redirect to the login page\r\n        navigate('/login');\r\n    };\r\n\r\n    // Example restaurant data\r\n    const [restaurantData, setRestaurantData] = useState([]);\r\n\r\n    // Use useEffect to fetch data when the component mounts\r\n    useEffect(() => {\r\n        const fetchRestaurants = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:5000/api/auth/restaurants', {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"auth-token\": localStorage.getItem('token')\r\n                    },\r\n                });\r\n\r\n                if (response.ok) {\r\n                    const json = await response.json();\r\n                    setRestaurantData(json);\r\n                } else {\r\n                    // Handle errors here, e.g., unauthorized access\r\n                    console.error(\"Failed to fetch restaurant data\");\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error fetching restaurant data:\", error);\r\n            }\r\n        };\r\n\r\n        fetchRestaurants();\r\n    }, []); // Empty dependency array to run the effect only once\r\n\r\n    return (\r\n        <>\r\n            <h3>Welcome to the Admin Page</h3>\r\n            <table className=\"table table-striped\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">ID</th>\r\n                        <th scope=\"col\">Name</th>\r\n                        <th scope=\"col\">Location</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {restaurantData.map((restaurant) => (\r\n                        <tr key={restaurant.id}>\r\n                            <td>{restaurant.id}</td>\r\n                            <td>{restaurant.name}</td>\r\n                            <td>{restaurant.location}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n            <button type=\"button\" className=\"btn btn-primary\" onClick={handleLogout}>Logout</button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Admin;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}