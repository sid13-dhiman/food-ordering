{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\food-ordering\\\\src\\\\context\\\\MenuState.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from 'react';\nimport MenuDataContext from './menuContext'; // Import the new context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction menuDataReducer(state, action) {\n  switch (action.type) {\n    case 'SET_MENU_DATA':\n      return action.payload;\n    case 'ADD_MENU':\n      return [...state, action.payload];\n    // Add more cases for edit and delete actions if needed\n    default:\n      return state;\n  }\n}\nconst MenuState = props => {\n  _s();\n  const host = \"http://localhost:5000\";\n  const [menuData, setMenuData] = useReducer(menuDataReducer, []);\n  const getMenu = async () => {\n    // API CALL\n    const response = await fetch(`${host}/api/menuData/fetchmenudata`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const json = await response.json();\n    setMenuData(json);\n  };\n\n  // Add a menu      \n  const addMenu = async (name, category, price, description, file) => {\n    const response = await fetch(`${host}/api/menuData/addmenu`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        name,\n        category,\n        price,\n        description,\n        file\n      })\n    });\n    const menu = await response.json();\n    setMenuData(menuData.concat(menu));\n  };\n\n  // Delete a note\n  const deletemenu = async id => {\n    // API Call\n    const response = await fetch(`${host}/api/menuData/deletemenu/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem('token')\n      }\n    });\n    const json = response.json(); // parses JSON response into native JavaScript objects\n    console.log(json);\n    console.log(\"Deleting the menu with id\" + id);\n    const newMenuData = menuData.filter(menu => menu._id !== id); // Assuming _id is the unique identifier\n    setMenuData(newMenuData);\n  };\n\n  // Edit a note\n  const editMenu = async (id, name, category, price, description, file) => {\n    // API Call\n    const response = await fetch(`${host}/api/menuData/updatemenu/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        name,\n        category,\n        price,\n        description,\n        file\n      }) // body data type must match \"Content-Type\" header\n    });\n\n    const json = await response.json(); // parses JSON response into native JavaScript objects\n    console.log(json);\n    let newMenuData = JSON.parse(JSON.stringify(menuData));\n    // Logic to edit in client\n    for (let index = 0; index < newMenuData.length; index++) {\n      const element = newMenuData[index];\n      if (element._id === id) {\n        newMenuData[index].name = name;\n        newMenuData[index].category = category;\n        newMenuData[index].price = price;\n        newMenuData[index].description = description;\n        newMenuData[index].file = file;\n        break;\n      }\n    }\n    setMenuData(newMenuData);\n  };\n  return /*#__PURE__*/_jsxDEV(MenuDataContext.Provider, {\n    value: {\n      menuData,\n      addMenu,\n      getMenu,\n      editMenu,\n      deletemenu\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n_s(MenuState, \"KGSiTN9K7mX32OyZxdJDO3T+7lw=\");\n_c = MenuState;\nexport default MenuState;\nvar _c;\n$RefreshReg$(_c, \"MenuState\");","map":{"version":3,"names":["React","useReducer","MenuDataContext","jsxDEV","_jsxDEV","menuDataReducer","state","action","type","payload","MenuState","props","_s","host","menuData","setMenuData","getMenu","response","fetch","method","headers","json","addMenu","name","category","price","description","file","localStorage","getItem","body","JSON","stringify","menu","concat","deletemenu","id","console","log","newMenuData","filter","_id","editMenu","parse","index","length","element","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/React/food-ordering/src/context/MenuState.js"],"sourcesContent":["import React, { useReducer } from 'react';\r\nimport MenuDataContext from './menuContext'; // Import the new context\r\n\r\nfunction menuDataReducer(state, action) {\r\n    switch (action.type) {\r\n      case 'SET_MENU_DATA':\r\n        return action.payload;\r\n      case 'ADD_MENU':\r\n        return [...state, action.payload];\r\n      // Add more cases for edit and delete actions if needed\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n\r\nconst MenuState = (props) => {\r\n    const host = \"http://localhost:5000\";\r\n\r\n    const [menuData, setMenuData] = useReducer(menuDataReducer, []);\r\n\r\n    const getMenu = async () => {\r\n\r\n        // API CALL\r\n        const response = await fetch(`${host}/api/menuData/fetchmenudata`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n\r\n        });\r\n        const json = await response.json()\r\n        setMenuData(json);\r\n    }\r\n\r\n    // Add a menu      \r\n    const addMenu = async (name, category, price, description, file) => {\r\n        const response = await fetch(`${host}/api/menuData/addmenu`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"auth-token\": localStorage.getItem('token')\r\n            },\r\n            body: JSON.stringify({ name, category, price, description, file })\r\n        });\r\n\r\n        const menu = await response.json();\r\n        setMenuData(menuData.concat(menu))\r\n    }\r\n\r\n    // Delete a note\r\n    const deletemenu = async (id) => {\r\n        // API Call\r\n        const response = await fetch(`${host}/api/menuData/deletemenu/${id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"auth-token\": localStorage.getItem('token')\r\n            },\r\n        });\r\n        const json = response.json(); // parses JSON response into native JavaScript objects\r\n        console.log(json)\r\n\r\n        console.log(\"Deleting the menu with id\" + id)\r\n        const newMenuData = menuData.filter((menu) => menu._id !== id); // Assuming _id is the unique identifier\r\n        setMenuData(newMenuData);\r\n    }\r\n\r\n    // Edit a note\r\n    const editMenu = async (id, name, category, price, description, file) => {\r\n        // API Call\r\n        const response = await fetch(`${host}/api/menuData/updatemenu/${id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"auth-token\": localStorage.getItem('token')\r\n            },\r\n\r\n            body: JSON.stringify({ name, category, price, description, file }) // body data type must match \"Content-Type\" header\r\n        });\r\n        const json = await response.json(); // parses JSON response into native JavaScript objects\r\n        console.log(json);\r\n        let newMenuData = JSON.parse(JSON.stringify(menuData))\r\n        // Logic to edit in client\r\n        for (let index = 0; index < newMenuData.length; index++) {\r\n            const element = newMenuData[index];\r\n            if (element._id === id) {\r\n                newMenuData[index].name = name;\r\n                newMenuData[index].category = category;\r\n                newMenuData[index].price = price;\r\n                newMenuData[index].description = description;\r\n                newMenuData[index].file = file;\r\n                break;\r\n            }\r\n        }\r\n        setMenuData(newMenuData);\r\n    }\r\n\r\n    return (\r\n        <MenuDataContext.Provider value={{ menuData, addMenu, getMenu, editMenu, deletemenu }}>\r\n            {props.children}\r\n        </MenuDataContext.Provider>\r\n    )\r\n}\r\n\r\nexport default MenuState;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}