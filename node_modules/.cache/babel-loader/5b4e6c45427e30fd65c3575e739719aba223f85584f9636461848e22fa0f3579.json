{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\food-ordering\\\\src\\\\context\\\\menuContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// import { createContext } from \"react\";\n\n// const menuContext = createContext();\n\n// export default menuContext;\n\nimport { createContext, useContext, useReducer } from 'react';\n\n// Define your action types\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ADD_MENU = 'ADD_MENU';\nconst host = \"http://localhost:5000\";\n\n// Define your initial state and reducer function\nconst initialState = {\n  menus: [] // You may have other properties in your state\n};\n\nconst menuReducer = (state, action) => {\n  switch (action.type) {\n    case ADD_MENU:\n      return {\n        ...state,\n        menus: [...state.menus, action.payload]\n      };\n    // Handle other action types if needed\n    default:\n      return state;\n  }\n};\n\n// Create your context\nconst MenuContext = /*#__PURE__*/createContext();\n\n// Create a custom hook to access the context and dispatch function\nexport const useMenuContext = () => {\n  _s();\n  return useContext(MenuContext);\n};\n\n// Create a context provider component\n_s(useMenuContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const MenuProvider = ({\n  children\n}) => {\n  _s2();\n  const [state, dispatch] = useReducer(menuReducer, initialState);\n\n  // Define your action creators\n  const addMenu = (name, category, price, description, file) => {\n    const newMenu = {\n      name,\n      category,\n      price,\n      description,\n      file\n    };\n    dispatch({\n      type: ADD_MENU,\n      payload: newMenu\n    });\n  };\n  const getMenu = async () => {\n    try {\n      const response = await fetch(`${host}/api/menuData/fetchmenudata`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch menu data');\n      }\n      const menuData = await response.json();\n      dispatch({\n        type: 'SET_MENU',\n        payload: menuData\n      });\n    } catch (error) {\n      console.error('Error fetching menu data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(MenuContext.Provider, {\n    value: {\n      state,\n      addMenu,\n      getMenu\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s2(MenuProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = MenuProvider;\nvar _c;\n$RefreshReg$(_c, \"MenuProvider\");","map":{"version":3,"names":["createContext","useContext","useReducer","jsxDEV","_jsxDEV","ADD_MENU","host","initialState","menus","menuReducer","state","action","type","payload","MenuContext","useMenuContext","_s","MenuProvider","children","_s2","dispatch","addMenu","name","category","price","description","file","newMenu","getMenu","response","fetch","method","headers","ok","Error","menuData","json","error","console","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/React/food-ordering/src/context/menuContext.js"],"sourcesContent":["// import { createContext } from \"react\";\r\n\r\n// const menuContext = createContext();\r\n\r\n// export default menuContext;\r\n\r\nimport { createContext, useContext, useReducer } from 'react';\r\n\r\n// Define your action types\r\nconst ADD_MENU = 'ADD_MENU';\r\nconst host = \"http://localhost:5000\";\r\n\r\n\r\n// Define your initial state and reducer function\r\nconst initialState = {\r\n  menus: [], // You may have other properties in your state\r\n};\r\n\r\nconst menuReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case ADD_MENU:\r\n      return {\r\n        ...state,\r\n        menus: [...state.menus, action.payload],\r\n      };\r\n    // Handle other action types if needed\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Create your context\r\nconst MenuContext = createContext();\r\n\r\n// Create a custom hook to access the context and dispatch function\r\nexport const useMenuContext = () => {\r\n  return useContext(MenuContext);\r\n};\r\n\r\n// Create a context provider component\r\nexport const MenuProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(menuReducer, initialState);\r\n\r\n  // Define your action creators\r\n  const addMenu = (name, category, price, description, file) => {\r\n    const newMenu = { name, category, price, description, file };\r\n    dispatch({ type: ADD_MENU, payload: newMenu });\r\n  };\r\n\r\n  const getMenu = async () => {\r\n    try {\r\n      const response = await fetch(`${host}/api/menuData/fetchmenudata`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch menu data');\r\n      }\r\n\r\n      const menuData = await response.json();\r\n\r\n      dispatch({ type: 'SET_MENU', payload: menuData });\r\n    } catch (error) {\r\n      console.error('Error fetching menu data:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MenuContext.Provider value={{ state, addMenu, getMenu }}>\r\n      {children}\r\n    </MenuContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA;;AAEA;;AAEA;;AAEA,SAASA,aAAa,EAAEC,UAAU,EAAEC,UAAU,QAAQ,OAAO;;AAE7D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,QAAQ,GAAG,UAAU;AAC3B,MAAMC,IAAI,GAAG,uBAAuB;;AAGpC;AACA,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE,CAAE;AACb,CAAC;;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACrC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKP,QAAQ;MACX,OAAO;QACL,GAAGK,KAAK;QACRF,KAAK,EAAE,CAAC,GAAGE,KAAK,CAACF,KAAK,EAAEG,MAAM,CAACE,OAAO;MACxC,CAAC;IACH;IACA;MACE,OAAOH,KAAK;EAChB;AACF,CAAC;;AAED;AACA,MAAMI,WAAW,gBAAGd,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,MAAMe,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,OAAOf,UAAU,CAACa,WAAW,CAAC;AAChC,CAAC;;AAED;AAAAE,EAAA,CAJaD,cAAc;AAK3B,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACT,KAAK,EAAEU,QAAQ,CAAC,GAAGlB,UAAU,CAACO,WAAW,EAAEF,YAAY,CAAC;;EAE/D;EACA,MAAMc,OAAO,GAAGA,CAACC,IAAI,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,WAAW,EAAEC,IAAI,KAAK;IAC5D,MAAMC,OAAO,GAAG;MAAEL,IAAI;MAAEC,QAAQ;MAAEC,KAAK;MAAEC,WAAW;MAAEC;IAAK,CAAC;IAC5DN,QAAQ,CAAC;MAAER,IAAI,EAAEP,QAAQ;MAAEQ,OAAO,EAAEc;IAAQ,CAAC,CAAC;EAChD,CAAC;EAED,MAAMC,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAExB,IAAK,6BAA4B,EAAE;QACjEyB,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEF,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAC9C;MAEA,MAAMC,QAAQ,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MAEtChB,QAAQ,CAAC;QAAER,IAAI,EAAE,UAAU;QAAEC,OAAO,EAAEsB;MAAS,CAAC,CAAC;IACnD,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,oBACEjC,OAAA,CAACU,WAAW,CAACyB,QAAQ;IAACC,KAAK,EAAE;MAAE9B,KAAK;MAAEW,OAAO;MAAEO;IAAQ,CAAE;IAAAV,QAAA,EACtDA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACzB,GAAA,CAnCWF,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}