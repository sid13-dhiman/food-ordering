{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\food-ordering\\\\src\\\\components\\\\CategoryPage.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CategoryPage = ({\n  match,\n  categoryImages\n}) => {\n  const restaurantName = match.params.restaurantName;\n\n  // Get the category images for the current restaurant\n  const restaurantCategoryImages = categoryImages[restaurantName];\n  if (!restaurantCategoryImages) {\n    // Handle the case where category images are not found for the restaurant\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Category Images not found for \", restaurantName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [restaurantName, \" Categories\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category-images\",\n      children: Object.keys(restaurantCategoryImages).map((category, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: restaurantCategoryImages[category],\n          alt: category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_c = CategoryPage;\nexport default CategoryPage;\nvar _c;\n$RefreshReg$(_c, \"CategoryPage\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","CategoryPage","match","categoryImages","restaurantName","params","restaurantCategoryImages","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Object","keys","map","category","index","src","alt","_c","$RefreshReg$"],"sources":["D:/React/food-ordering/src/components/CategoryPage.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst CategoryPage = ({ match, categoryImages }) => {\r\n  const restaurantName = match.params.restaurantName;\r\n\r\n  // Get the category images for the current restaurant\r\n  const restaurantCategoryImages = categoryImages[restaurantName];\r\n\r\n  if (!restaurantCategoryImages) {\r\n    // Handle the case where category images are not found for the restaurant\r\n    return (\r\n      <div>\r\n        <h2>Category Images not found for {restaurantName}</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>{restaurantName} Categories</h2>\r\n      <div className=\"category-images\">\r\n        {Object.keys(restaurantCategoryImages).map((category, index) => (\r\n          <div key={index}>\r\n            <h3>{category}</h3>\r\n            <img src={restaurantCategoryImages[category]} alt={category} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryPage;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAe,CAAC,KAAK;EAClD,MAAMC,cAAc,GAAGF,KAAK,CAACG,MAAM,CAACD,cAAc;;EAElD;EACA,MAAME,wBAAwB,GAAGH,cAAc,CAACC,cAAc,CAAC;EAE/D,IAAI,CAACE,wBAAwB,EAAE;IAC7B;IACA,oBACEN,OAAA;MAAAO,QAAA,eACEP,OAAA;QAAAO,QAAA,GAAI,gCAA8B,EAACH,cAAc;MAAA;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC;EAEV;EAEA,oBACEX,OAAA;IAAAO,QAAA,gBACEP,OAAA;MAAAO,QAAA,GAAKH,cAAc,EAAC,aAAW;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpCX,OAAA;MAAKY,SAAS,EAAC,iBAAiB;MAAAL,QAAA,EAC7BM,MAAM,CAACC,IAAI,CAACR,wBAAwB,CAAC,CAACS,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBACzDjB,OAAA;QAAAO,QAAA,gBACEP,OAAA;UAAAO,QAAA,EAAKS;QAAQ;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACnBX,OAAA;UAAKkB,GAAG,EAAEZ,wBAAwB,CAACU,QAAQ,CAAE;UAACG,GAAG,EAAEH;QAAS;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,GAFvDM,KAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACS,EAAA,GA5BInB,YAAY;AA8BlB,eAAeA,YAAY;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}